{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  fullName: \"\",\n  nationalID: \"\",\n  createdAt: \"\"\n};\nconst customerSlice = createSlice({\n  name: 'customer',\n  initialState,\n  reducers: {\n    createCustomer: {\n      prepare(fullName, nationalID) {}\n    }\n  }\n});\n\n// export default function customerReducer(state = initialStateCustomer, action) {\n//     switch (action.type) {\n//         case \"customer/createCustomer\":\n//             return {\n//                 ...state,\n//                 fullName: action.payload.fullName,\n//                 nationalID: action.payload.nationalID,\n//                 createdAt: action.payload.createdAt,\n//             };\n//         case \"customer/updateName\":\n//             return { ...state, fullName: action.payload };\n//         default:\n//             return state;\n//     }\n// }\n\n// export function createCustomer(fullName, nationalID) {\n//     return {\n//         type: \"customer/createCustomer\",\n//         payload: { fullName, nationalID, createdAt: new Date().toISOString() },\n//     };\n// }\n\n// export function updateName(fullName) {\n//     return { type: \"customer/updateName\", payload: fullName };\n// }","map":{"version":3,"names":["createSlice","initialState","fullName","nationalID","createdAt","customerSlice","name","reducers","createCustomer","prepare"],"sources":["D:/react.js/ultimate-react-course-main/15-redux-intro/starter/src/featuers/customers/customerSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nconst initialState = {\r\n    fullName: \"\",\r\n    nationalID: \"\",\r\n    createdAt: \"\",\r\n};\r\n\r\nconst customerSlice = createSlice({\r\n    name : 'customer',\r\n    initialState,\r\n    reducers : {\r\n        createCustomer : {\r\n            prepare(fullName,nationalID){\r\n                \r\n            }\r\n        }\r\n    }\r\n})\r\n\r\n// export default function customerReducer(state = initialStateCustomer, action) {\r\n//     switch (action.type) {\r\n//         case \"customer/createCustomer\":\r\n//             return {\r\n//                 ...state,\r\n//                 fullName: action.payload.fullName,\r\n//                 nationalID: action.payload.nationalID,\r\n//                 createdAt: action.payload.createdAt,\r\n//             };\r\n//         case \"customer/updateName\":\r\n//             return { ...state, fullName: action.payload };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n\r\n\r\n// export function createCustomer(fullName, nationalID) {\r\n//     return {\r\n//         type: \"customer/createCustomer\",\r\n//         payload: { fullName, nationalID, createdAt: new Date().toISOString() },\r\n//     };\r\n// }\r\n\r\n// export function updateName(fullName) {\r\n//     return { type: \"customer/updateName\", payload: fullName };\r\n// }\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,MAAMC,YAAY,GAAG;EACjBC,QAAQ,EAAE,EAAE;EACZC,UAAU,EAAE,EAAE;EACdC,SAAS,EAAE;AACf,CAAC;AAED,MAAMC,aAAa,GAAGL,WAAW,CAAC;EAC9BM,IAAI,EAAG,UAAU;EACjBL,YAAY;EACZM,QAAQ,EAAG;IACPC,cAAc,EAAG;MACbC,OAAOA,CAACP,QAAQ,EAACC,UAAU,EAAC,CAE5B;IACJ;EACJ;AACJ,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}